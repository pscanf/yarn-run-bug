# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /Users/pscanf/code/github.com/pscanf/yarn-run-bug
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 238
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 60
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
records:
  - delay: 448
    content: "\e[?1034hshame:yarn-run-bug pscanf$ "
  - delay: 1889
    content: 'n'
  - delay: 76
    content: o
  - delay: 68
    content: d
  - delay: 74
    content: e
  - delay: 119
    content: ' '
  - delay: 220
    content: '-'
  - delay: 151
    content: v
  - delay: 308
    content: "\r\n"
  - delay: 9
    content: "v11.1.0\r\nshame:yarn-run-bug pscanf$ "
  - delay: 634
    content: 'y'
  - delay: 77
    content: a
  - delay: 159
    content: r
  - delay: 101
    content: 'n'
  - delay: 159
    content: ' '
  - delay: 277
    content: '-'
  - delay: 122
    content: v
  - delay: 349
    content: "\r\n"
  - delay: 173
    content: "1.12.3\r\n"
  - delay: 8
    content: 'shame:yarn-run-bug pscanf$ '
  - delay: 763
    content: 'n'
  - delay: 174
    content: p
  - delay: 124
    content: m
  - delay: 191
    content: ' '
  - delay: 160
    content: r
  - delay: 103
    content: u
  - delay: 71
    content: 'n'
  - delay: 206
    content: ' '
  - delay: 297
    content: c
  - delay: 92
    content: o
  - delay: 109
    content: v
  - delay: 84
    content: e
  - delay: 118
    content: r
  - delay: 210
    content: a
  - delay: 201
    content: g
  - delay: 117
    content: e
  - delay: 251
    content: "\r\n"
  - delay: 403
    content: "\r\n> yarn-run-bug@1.0.0 coverage /Users/pscanf/code/github.com/pscanf/yarn-run-bug\r\n> nyc yarn test\r\n\r\n"
  - delay: 672
    content: "\e[2K\e[1G\e[1myarn run v1.12.3\e[22m\r\n"
  - delay: 56
    content: "\e[2K\e[1G\e[2m$ mocha test.js\e[22m\r\n"
  - delay: 485
    content: "\r\n\e[0m\e[0m\r\n\e[32m  ✓\e[0m\e[90m tests function testMe\e[0m\r\n\r\n\e[92m \e[0m\e[32m 1 passing\e[0m\e[90m (5ms)\e[0m\r\n\r\n"
  - delay: 12
    content: "\e[2K\e[1G✨  Done in 0.57s.\r\n"
  - delay: 20
    content: "\r\n=============================== Coverage summary ===============================\r\n\e[32;1mStatements   : 100% ( 1/1 )\e[0m\r\n\e[32;1mBranches     : 100% ( 0/0 )\e[0m\r\n\e[32;1mFunctions    : 100% ( 1/1 )\e[0m\r\n\e[32;1mLines        : 100% ( 1/1 )\e[0m\r\n================================================================================\r\n"
  - delay: 12
    content: 'shame:yarn-run-bug pscanf$ '
  - delay: 1406
    content: a
  - delay: 522
    content: "\b\e[K"
  - delay: 326
    content: 'y'
  - delay: 84
    content: a
  - delay: 196
    content: r
  - delay: 110
    content: 'n'
  - delay: 148
    content: ' '
  - delay: 216
    content: r
  - delay: 105
    content: u
  - delay: 96
    content: 'n'
  - delay: 170
    content: ' '
  - delay: 146
    content: c
  - delay: 77
    content: o
  - delay: 81
    content: v
  - delay: 100
    content: e
  - delay: 96
    content: r
  - delay: 181
    content: a
  - delay: 184
    content: g
  - delay: 116
    content: e
  - delay: 333
    content: "\r\n"
  - delay: 229
    content: "\e[2K\e[1G\e[1myarn run v1.12.3\e[22m\r\n"
  - delay: 46
    content: "\e[2K\e[1G\e[2m$ nyc yarn test\e[22m\r\n"
  - delay: 465
    content: "\e[2K\e[1G\e[2m$ mocha test.js\e[22m\r\n"
  - delay: 283
    content: "\r\n\e[0m\e[0m\r\n\e[32m  ✓\e[0m\e[90m tests function testMe\e[0m\r\n\r\n\e[92m \e[0m\e[32m 1 passing\e[0m\e[90m (5ms)\e[0m\r\n\r\n"
  - delay: 20
    content: "\r\n=============================== Coverage summary ===============================\r\n\e[33;1mStatements   : Unknown% ( 0/0 )\e[0m\r\n\e[33;1mBranches     : Unknown% ( 0/0 )\e[0m\r\n\e[33;1mFunctions    : Unknown% ( 0/0 )\e[0m\r\n\e[33;1mLines        : Unknown% ( 0/0 )\e[0m\r\n================================================================================\r\n"
  - delay: 7
    content: "\e[2K\e[1G✨  Done in 0.83s.\r\n"
  - delay: 10
    content: 'shame:yarn-run-bug pscanf$ '
  - delay: 2161
    content: "logout\r\n"
